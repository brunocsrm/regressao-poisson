"0","# Declaração de funções"
"0",""
"0",""
"0","faz_tab_bayes <- function(samp, real){"
"0","  "
"0","  # recebe um objeto do tipo samp "
"0","  # real é um vetor com os valores reais dos parametros"
"0","  # q é o tamanho do vetor de parametros reais"
"0","  "
"0","  q <- length(real$beta)"
"0","  aux = cbind(samp$beta)"
"0","  me = apply(aux, 2, mean)   # média"
"0","  md = apply(aux, 2, median) # mediana"
"0","  sd = apply(aux, 2, sd)     # desvio padrão"
"0","  aux = as.mcmc(aux)"
"0","  hpd = HPDinterval(aux)"
"0","  tab = cbind(unlist(real), me, md, sd, hpd[,'lower'], hpd[,'upper'], hpd[,'upper'] - hpd[,'lower'])"
"0","  rownames(tab) = c(paste0('beta', 0:(q-1)))"
"0","  colnames(tab) = c('true', 'mean', 'median', 's.d.', 'HPD_inf', 'HPD_sup', 'Amplitude')"
"0","  res <- round(tab, 4)              # mostrar saída com 4 casas decimais "
"0","  return(res)"
"0","  "
"0","}"
"0",""
"0",""
"0","faz_tab_classica <- function(mod, real){"
"0","  # mod é um glm"
"0","  # q é o tamanho do vetor de betas"
"0",""
"0","  q <- coef(mod) |> length()"
"0","  tab_classica <- summary(mod)$coefficients"
"0","  rownames(tab_classica) <- c(paste0('beta', 0:(q-1)))"
"0","  ic <- calcula_ic(mod)"
"0","  tab_classica <- tab_classica[,-3]"
"0","  tab_classica <- cbind(tab_classica[,0], ""true"" = real$beta, tab_classica)"
"0","  tab_classica <- cbind(tab_classica,""Limite Inferior"" = ic$li, "
"0","                        ""Limite Superior"" = ic$ls, "
"0","                        ""Amplitude"" = abs(ic$ls - ic$li))"
"0","  res <- round(tab_classica, 4)"
"0","  return(res)"
"0","  "
"0","}"
"0",""
"0",""
"0","faz_tab_latex <- function(tab){"
"0","  # Recebe uma tabela e transforma no formato latex"
"0","  "
"0","  kbl(tab, booktabs = T)%>% "
"0","      kable_styling(latex_options = c(""striped"", ""scale_down"",  ""hold_position""))"
"0","}"
"0",""
"0",""
"0","cria_traceplot <- function(samp, real, index_beta){"
"0","  # Neste script a função foi adaptada para receber um samp como betor"
"0",""
"0","  { plot( samp$beta[,index_beta], type = 'l', cex.lab = 1.5, cex.axis = 1.5,"
"0","        xlab = 'iterações', ylab = 'beta0',"
"0","        main = paste0(""Traceplot de beta"", (index_beta-1)), col = 'blue') "
"0","  abline( h = real$beta[index_beta], lwd = 5, col = 'red') }"
"0","}"
"0",""
"0",""
"0","calcula_ic <- function(mod, conf_level = 0.95){"
"0","  # Usado apenas para o método frequentista "
"0","  "
"0","  tab_info <- summary(mod)$coefficients"
"0","  estimatives <- tab_info[,1]"
"0","  standard_error <- tab_info[,2]"
"0","  z <- abs(qnorm((1-conf_level)/2))"
"0","  li <- estimatives - z*standard_error  "
"0","  ls <- estimatives + z*standard_error"
"0","  res <- list(li = li, ls = ls)"
"0","  "
"0","  return(res)"
"0","}"
"0",""
"0",""
